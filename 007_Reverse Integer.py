"""Given a 32-bit signed integer, reverse digits of an integer.Example 1:Input: 123Output:  321Example 2:Input: -123Output: -321Example 3:Input: 120Output: 21Note:Assume we are dealing with an environment which could only hold integers within the 32-bit signed integer range.For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows."""class Solution(object):    def reverse(self, x):        """        :type x: int        :rtype: int        """        flag = 1        if x < 0:            flag = -1            x = -1 * x        lst = []        while int(x * 10 / 10):            lst.append(x % 10)            x = int(x / 10)        sum = 0        for i in lst:            if 2147483647 / 10 < sum:                return 0            sum = sum * 10 + i        return sum * flag